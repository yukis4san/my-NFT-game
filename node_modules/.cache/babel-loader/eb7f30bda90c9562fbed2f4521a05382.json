{"ast":null,"code":"var _jsxFileName = \"/Users/yukis4san/NFT-game/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './SelectCharacter.css';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport LoadingIndicator from '../../Components/LoadingIndicator'; // SelectCharacter コンポーネントを定義しています。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  //NFT キャラクターのメタデータを保存する状態変数を初期化します。\n  const [characters, setCharacters] = useState([]); // コントラクトのデータを保有する状態変数を初期化します。\n\n  const [gameContract, setGameContract] = useState(null); // Minting の状態保存する状態変数を初期化します。\n\n  const [mintingCharacter, setMintingCharacter] = useState(false);\n\n  const mintCharacterNFTAction = characterId => async () => {\n    try {\n      if (gameContract) {\n        // Mint が開始されたら、ローディングマークを表示する。\n        setMintingCharacter(true);\n        console.log('Minting character in progress...');\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log('mintTxn:', mintTxn); // Mint が終了したら、ローディングマークを消す。\n\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.warn('MintCharacterAction Error:', error); // エラーが発生した場合も、ローディングマークを消す。\n\n      setMintingCharacter(false);\n    }\n  }; // ページがロードされた瞬間に下記を実行します。\n\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer); // gameContract の状態を更新します。\n\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []); // ページがロードされた瞬間に下記を実行します。\n\n  useEffect(() => {\n    // NFT キャラクターのデータをスマートコントラクトから取得します。\n    const getCharacters = async () => {\n      try {\n        console.log('Getting contract characters to mint'); // ミント可能な全 NFT キャラクター をコントラクトをから呼び出します。\n\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log('charactersTxn:', charactersTxn); // すべてのNFTキャラクターのデータを変換します。\n\n        const characters = charactersTxn.map(characterData => transformCharacterData(characterData)); // ミント可能なすべてのNFTキャラクターの状態を設定します。\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error('Something went wrong fetching characters:', error);\n      }\n    }; // イベントを受信したときに起動するコールバックメソッドを追加します。\n\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`); // NFT キャラクターが Mint されたら、コントラクトからメタデータを受け取り、アリーナに移動するための状態に設定します。\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log('CharacterNFT: ', characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n        alert(`NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${CONTRACT_ADDRESS}:${tokenId.toNumber()}?tab=details`);\n      }\n    };\n\n    if (gameContract) {\n      getCharacters(); // リスナーの設定：NFT キャラクターが Mint された通知を受け取ります。\n\n      gameContract.on('CharacterNFTMinted', onCharacterMint);\n    }\n\n    return () => {\n      // コンポーネントがマウントされたら、リスナーを停止する。\n      if (gameContract) {\n        gameContract.off('CharacterNFTMinted', onCharacterMint);\n      }\n    };\n  }, [gameContract]); // NFT キャラクターをフロントエンドにレンダリングするメソッドです。\n\n  const renderCharacters = () => characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character.imageURI,\n      alt: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"character-mint-button\",\n      onClick: mintCharacterNFTAction(index),\n      children: `Mint ${character.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }, this)]\n  }, character.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-grid\",\n      children: renderCharacters()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), mintingCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Minting In Progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/JjXJ4Hf.gif\",\n        alt: \"Minting loading indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectCharacter, \"YAIluGJumFDmJAPdOeDT94pTudM=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/Users/yukis4san/NFT-game/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","characterId","console","log","mintTxn","mintCharacterNFT","wait","error","warn","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","map","characterData","onCharacterMint","sender","tokenId","characterIndex","toNumber","characterNFT","checkIfUserHasNFT","alert","on","off","renderCharacters","character","index","name","imageURI","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B,C,CAEA;;;;AACA,MAAMC,eAAe,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAChD;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAFgD,CAIhD;;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD,CALgD,CAOhD;;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMc,sBAAsB,GAAIC,WAAD,IAAiB,YAAY;AAC3D,QAAI;AACH,UAAIL,YAAJ,EAAkB;AAClB;AACAG,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,cAAMC,OAAO,GAAG,MAAMR,YAAY,CAACS,gBAAb,CAA8BJ,WAA9B,CAAtB;AACA,cAAMG,OAAO,CAACE,IAAR,EAAN;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,OAAxB,EAPkB,CAQlB;;AACAL,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACC;AACD,KAZD,CAYE,OAAOQ,KAAP,EAAc;AACfL,MAAAA,OAAO,CAACM,IAAR,CAAa,4BAAb,EAA2CD,KAA3C,EADe,CAEf;;AACAR,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD,GAlBD,CAVgD,CA8BhD;;;AACAd,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAM;AAAEwB,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIxB,MAAM,CAACyB,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMnB,YAAY,GAAG,IAAIT,MAAM,CAAC6B,QAAX,CACtB5B,gBADsB,EAEtBE,UAAU,CAAC2B,GAFW,EAGtBH,MAHsB,CAArB,CAHY,CAQZ;;AACAjB,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAVD,MAUO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACE,GAhBM,EAgBJ,EAhBI,CAAT,CA/BgD,CAiDhD;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,UAAMiC,aAAa,GAAG,YAAY;AAChC,UAAI;AACLhB,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EADK,CAGL;;AACA,cAAMgB,aAAa,GAAG,MAAMvB,YAAY,CAACwB,uBAAb,EAA5B;AAEAlB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BgB,aAA9B,EANK,CAQL;;AACA,cAAMzB,UAAU,GAAGyB,aAAa,CAACE,GAAd,CAAmBC,aAAD,IACnCjC,sBAAsB,CAACiC,aAAD,CADL,CAAnB,CATK,CAaL;;AACA3B,QAAAA,aAAa,CAACD,UAAD,CAAb;AACE,OAfD,CAeE,OAAOa,KAAP,EAAc;AACjBL,QAAAA,OAAO,CAACK,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;AACE;AACF,KAnBD,CAFe,CAuBf;;;AACA,UAAMgB,eAAe,GAAG,OAAOC,MAAP,EAAeC,OAAf,EAAwBC,cAAxB,KAA2C;AACjExB,MAAAA,OAAO,CAACC,GAAR,CACA,gCAA+BqB,MAAO,aAAYC,OAAO,CAACE,QAAR,EAAmB,oBAAmBD,cAAc,CAACC,QAAf,EAA0B,EADlH,EADiE,CAIjE;;AACA,UAAI/B,YAAJ,EAAkB;AACnB,cAAMgC,YAAY,GAAG,MAAMhC,YAAY,CAACiC,iBAAb,EAA3B;AACA3B,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8ByB,YAA9B;AACAnC,QAAAA,eAAe,CAACJ,sBAAsB,CAACuC,YAAD,CAAvB,CAAf;AACAE,QAAAA,KAAK,CAAE,yEAAwE1C,gBAAiB,IAAGqC,OAAO,CAACE,QAAR,EAAmB,cAAjH,CAAL;AACE;AACF,KAXD;;AAaA,QAAI/B,YAAJ,EAAkB;AAChBsB,MAAAA,aAAa,GADG,CAEhB;;AACAtB,MAAAA,YAAY,CAACmC,EAAb,CAAgB,oBAAhB,EAAsCR,eAAtC;AACD;;AACD,WAAO,MAAM;AACX;AACA,UAAI3B,YAAJ,EAAkB;AACnBA,QAAAA,YAAY,CAACoC,GAAb,CAAiB,oBAAjB,EAAuCT,eAAvC;AACE;AACF,KALD;AAME,GAhDM,EAgDJ,CAAC3B,YAAD,CAhDI,CAAT,CAlDgD,CAoGhD;;AACA,QAAMqC,gBAAgB,GAAG,MACzBvC,UAAU,CAAC2B,GAAX,CAAe,CAACa,SAAD,EAAYC,KAAZ,kBACd;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,kBAAID,SAAS,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,GAAG,EAAEF,SAAS,CAACG,QAApB;AAA8B,MAAA,GAAG,EAAEH,SAAS,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,SAAS,EAAC,uBAFX;AAGC,MAAA,OAAO,EAAEpC,sBAAsB,CAACmC,KAAD,CAHhC;AAAA,gBAIG,QAAOD,SAAS,CAACE,IAAK;AAJzB;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,KAAqCF,SAAS,CAACE,IAA/C;AAAA;AAAA;AAAA;AAAA,UADD,CADA;;AAgBA,sBACC;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG1C,UAAU,CAAC4C,MAAX,GAAoB,CAApB,iBACF;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCL,gBAAgB;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHD,EAMGnC,gBAAgB,iBAClB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACD,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBADC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACD,QAAA,GAAG,EAAC,iCADH;AAED,QAAA,GAAG,EAAC;AAFH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBE,CA3IH;;GAAMN,e;;KAAAA,e;AA6IJ,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SelectCharacter.css';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport LoadingIndicator from '../../Components/LoadingIndicator';\n\n// SelectCharacter コンポーネントを定義しています。\nconst SelectCharacter = ({ setCharacterNFT }) => {\n\t//NFT キャラクターのメタデータを保存する状態変数を初期化します。\n\tconst [characters, setCharacters] = useState([]);\n\n\t// コントラクトのデータを保有する状態変数を初期化します。\n\tconst [gameContract, setGameContract] = useState(null);\n\n\t// Minting の状態保存する状態変数を初期化します。\n\tconst [mintingCharacter, setMintingCharacter] = useState(false);\n\n\tconst mintCharacterNFTAction = (characterId) => async () => {\n\t\ttry {\n\t\t\tif (gameContract) {\n\t\t\t// Mint が開始されたら、ローディングマークを表示する。\n\t\t\tsetMintingCharacter(true);\n\n\t\t\tconsole.log('Minting character in progress...');\n\t\t\tconst mintTxn = await gameContract.mintCharacterNFT(characterId);\n\t\t\tawait mintTxn.wait();\n\t\t\tconsole.log('mintTxn:', mintTxn);\n\t\t\t// Mint が終了したら、ローディングマークを消す。\n\t\t\tsetMintingCharacter(false);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn('MintCharacterAction Error:', error);\n\t\t\t// エラーが発生した場合も、ローディングマークを消す。\n\t\t\tsetMintingCharacter(false);\n\t\t}\n\t};\n\n\t// ページがロードされた瞬間に下記を実行します。\n\tuseEffect(() => {\n\tconst { ethereum } = window;\n\n\tif (ethereum) {\n\t  const provider = new ethers.providers.Web3Provider(ethereum);\n\t  const signer = provider.getSigner();\n\t  const gameContract = new ethers.Contract(\n\t\tCONTRACT_ADDRESS,\n\t\tmyEpicGame.abi,\n\t\tsigner\n\t  );\n\t  // gameContract の状態を更新します。\n\t  setGameContract(gameContract);\n\t} else {\n\t  console.log('Ethereum object not found');\n\t}\n  \t}, []);\n\n\t// ページがロードされた瞬間に下記を実行します。\n\tuseEffect(() => {\n\t\t// NFT キャラクターのデータをスマートコントラクトから取得します。\n\t\tconst getCharacters = async () => {\n\t\t  try {\n\t\t\tconsole.log('Getting contract characters to mint');\n\n\t\t\t// ミント可能な全 NFT キャラクター をコントラクトをから呼び出します。\n\t\t\tconst charactersTxn = await gameContract.getAllDefaultCharacters();\n\n\t\t\tconsole.log('charactersTxn:', charactersTxn);\n\n\t\t\t// すべてのNFTキャラクターのデータを変換します。\n\t\t\tconst characters = charactersTxn.map((characterData) =>\n\t\t\t  transformCharacterData(characterData)\n\t\t\t);\n\n\t\t\t// ミント可能なすべてのNFTキャラクターの状態を設定します。\n\t\t\tsetCharacters(characters);\n\t\t  } catch (error) {\n\t\t\tconsole.error('Something went wrong fetching characters:', error);\n\t\t  }\n\t\t};\n\n\t\t// イベントを受信したときに起動するコールバックメソッドを追加します。\n\t\tconst onCharacterMint = async (sender, tokenId, characterIndex) => {\n\t\t  console.log(\n\t\t\t`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n\t\t  );\n\t\t  // NFT キャラクターが Mint されたら、コントラクトからメタデータを受け取り、アリーナに移動するための状態に設定します。\n\t\t  if (gameContract) {\n\t\t\tconst characterNFT = await gameContract.checkIfUserHasNFT();\n\t\t\tconsole.log('CharacterNFT: ', characterNFT);\n\t\t\tsetCharacterNFT(transformCharacterData(characterNFT));\n\t\t\talert(`NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${CONTRACT_ADDRESS}:${tokenId.toNumber()}?tab=details`)\n\t\t  }\n\t\t};\n\n\t\tif (gameContract) {\n\t\t  getCharacters();\n\t\t  // リスナーの設定：NFT キャラクターが Mint された通知を受け取ります。\n\t\t  gameContract.on('CharacterNFTMinted', onCharacterMint);\n\t\t}\n\t\treturn () => {\n\t\t  // コンポーネントがマウントされたら、リスナーを停止する。\n\t\t  if (gameContract) {\n\t\t\tgameContract.off('CharacterNFTMinted', onCharacterMint);\n\t\t  }\n\t\t};\n\t  }, [gameContract]);\n\n\t// NFT キャラクターをフロントエンドにレンダリングするメソッドです。\n\tconst renderCharacters = () =>\n\tcharacters.map((character, index) => (\n\t\t<div className=\"character-item\" key={character.name}>\n\t\t<div className=\"name-container\">\n\t\t\t<p>{character.name}</p>\n\t\t</div>\n\t\t<img src={character.imageURI} alt={character.name} />\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName=\"character-mint-button\"\n\t\t\tonClick={mintCharacterNFTAction(index)}\n\t\t>{`Mint ${character.name}`}</button>\n\t\t</div>\n\t));\n\n\n\treturn (\n\t\t<div className=\"select-character-container\">\n\t\t  <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\n\t\t  {characters.length > 0 && (\n\t\t\t<div className=\"character-grid\">{renderCharacters()}</div>\n\t\t  )}\n\t\t  {/* mintingCharacter = trueの場合のみ、ローディングマークを表示します。*/}\n\t\t  {mintingCharacter && (\n\t\t\t<div className=\"loading\">\n\t\t\t  <div className=\"indicator\">\n\t\t\t\t<LoadingIndicator />\n\t\t\t\t<p>Minting In Progress...</p>\n\t\t\t  </div>\n\t\t\t  <img\n\t\t\t\tsrc=\"https://i.imgur.com/JjXJ4Hf.gif\"\n\t\t\t\talt=\"Minting loading indicator\"\n\t\t\t  />\n\t\t\t</div>\n\t\t  )}\n\t\t</div>\n\t  );\n\n  };\n\n  export default SelectCharacter;\n"]},"metadata":{},"sourceType":"module"}