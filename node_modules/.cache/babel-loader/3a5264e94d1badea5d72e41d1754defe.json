{"ast":null,"code":"var _jsxFileName = \"/Users/yukis4san/NFT-game/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css'; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ボスのメタデータを保存する状態変数を初期化します。\n\n  const [boss, setBoss] = useState(null); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log('Boss:', bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Arena, \"hffOBmb6uNS/O642ivQyNGpPgu8=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/Users/yukis4san/NFT-game/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","fetchBoss","bossTxn","getBigBoss","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","imageURI","hp","maxHp","runAttackAction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css';\n\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT }) => {\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null);\n\n  // ボスのメタデータを保存する状態変数を初期化します。\n  const [boss, setBoss] = useState(null);\n\n  // ページがロードされると下記が実行されます。\n  useEffect(() => {\n\n  // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n  const fetchBoss = async () => {\n    const bossTxn = await gameContract.getBigBoss();\n    console.log('Boss:', bossTxn);\n    setBoss(transformCharacterData(bossTxn));\n  };\n\n  if (gameContract) {\n    // コントラクトの準備ができたら、ボスのメタデータを取得します。\n    fetchBoss();\n  }\n  }, [gameContract]);\n\n  // ページがロードされると下記が実行されます。\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n  return (\n\t<div className=\"arena-container\">\n\t  {/* ボスをレンダリングします */}\n\t  {boss && (\n\t\t<div className=\"boss-container\">\n\t\t  <div className={`boss-content`}>\n\t\t\t<h2>🔥 {boss.name} 🔥</h2>\n\t\t\t<div className=\"image-content\">\n\t\t\t  <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n\t\t\t  <div className=\"health-bar\">\n\t\t\t\t<progress value={boss.hp} max={boss.maxHp} />\n\t\t\t\t<p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n\t\t  <div className=\"attack-container\">\n\t\t\t<button className=\"cta-button\" onClick={runAttackAction}>\n\t\t\t  {`💥 Attack ${boss.name}`}\n\t\t\t</button>\n\t\t  </div>\n\t\t</div>\n\t  )}\n\t  {/* NFT キャラクター */}\n\t  <p>NFT キャラクターを表示します。</p>\n\t</div>\n  );\n};\nexport default Arena;\n"]},"metadata":{},"sourceType":"module"}